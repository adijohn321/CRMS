<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        acPbal36zQAAAABJRU5ErkJggg==
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Wp/aurj8P01BF311eJitAAAAAElFTkSuQmCC
</value>
  </data>
</root>